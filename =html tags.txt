<strong> = para tornar a frase/palavra dentro desta tag em negrito

<em> = para itálico 

<!DOCTYPE html> = necessário no html para o navegador entender que 
estamos programando na versão mais recente do html

< style="font-size: Xpx> = todo paragrafo tera o seu tamanho alterado para
o valor informado em X, por conta da font-size, que muda o tamanho


<style="text-align: center"> o text align ajuda a alinhar o texto aonde 
deseja, por esse exemplo, ao centro

<background: #xxxxxx> define as cores que quer implementar no css, o 
as cores mudam conforme o valor informado em x

[00:00] Neste bônus, vamos falar sobre cores e como elas funcionam no CSS, no navegador.

[00:06] A primeira coisa sobre a qual precisamos falar são alfabetos. Temos o nosso alfabeto padrão, abcde e por aí vai. Esse é o alfabeto que usamos no português.

[00:26] Os alfabetos para computação são um pouco diferentes. Por exemplo, temos o binário. É o 0 e o 1. Temos o numérico, que vai do 0 ao 9. E aí conseguimos representar todos os números com isso. Ainda temos o dicionário hexadecimal, que é a mesma coisa que o dicionário numérico adicionando as letras abcdef.

[01:03] Com esse dicionário conseguimos representar muito mais coisas do que só com o dicionário numérico. É ele que usamos para marcar cores.

[01:14] Vamos voltar e entender como funcionam as cores para nós.

[01:20] Nós conseguimos enxergar três espectros de cor, e o HTML monta isso. Nós enxergamos o espectro RGB, que quer dizer Red Green Blue. Ou seja, vermelho, verde e azul.

[01:38] Montamos a cor seguindo essa mesma característica, usando o dicionário hexadecimal. Para fazer isso, colocamos # e marcamos seis elementos. Os dois primeiros para marcar o vermelho, os dois segundos para marcar o verde e os dois últimos para marcar o azul.

[02:02] Como é a representação numérica, ou em hexadecimal, para esses números? O zero é a ausência de cor, e o F é o máximo de cor. Então, se eu quiser representar, por exemplo, o preto, que é a ausência de todas as cores, coloco #000000. Ou seja, 00 para vermelho, 00 para verde e 00 para o azul. Se eu quiser representar o branco, coloco #FFFFFF. FF para o vermelho, FF para o verde e FF para o azul.

[02:42] Lembrem que no nosso exercício, se voltarmos ao style do CSS, usamos a representação #CCCCCC. Se olharmos no espectro do hexadecimal, o CC é quase o branco. Não é o preto completo e nem o branco completo.

[03:10] Essa é a representação dos elementos.

[03:16] Como faríamos, por exemplo, para representar a cor vermelha em hexadecimal? Precisamos colocar # e precisamos que o vermelho seja completo, ou seja, no máximo, e que todas as outras cores não existam: #FF0000.

[03:36] Podemos voltar ao nosso CSS e alterar para, ao invés de vermelho, #FF0000. Assim, marcamos o vermelho em hexadecimal, e é assim que vamos usar as cores em hexadecimal no nosso projeto.

[03:55] É importante saber também que existe outra forma de representar as cores, além das que já vimos. Temos as cores básicas, a linguagem hexadecimal e a RGB. O mesmo padrão RGB que falamos sobre as cores que conseguimos enxergar, temos um dicionário RGB. Um alfabeto. Ele vai do 0 até 255. Ou seja, ele tem 256 níveis de representação de cada cor.

[04:44] Para isso, o 0 também é a ausência e o 255 é o máximo. A representação no CSS é um pouco diferente. Ao invés de colocar #, eu coloco RGB( , , ), separando as cores por vírgula. Antes da primeira vírgula vem o vermelho. Então, se eu quiser representar o branco, coloco RGB(255, 255, 255). Se eu quiser representar só o azul, RGB(0, 0, 255).

[05:32] Essa é a forma que usamos para representar as cores com esses alfabetos no CSS e isso ser renderizado pelo nosso navegador.


padding: = no css, define um espaço de "respiro" entre a palavra marcada e o resto do conteudo.

<a> serve para atribuir um link a uma palavra, ex:
<a href=""> Pastel da Cleide <a>


text-transform = recebe uma transformação no texto em que deseja, seja para aumentar as letras ou coisas do tipo
text-decoration = no css, define quais decorações da palavra voce quer, ou se não quer nenhuma.

<main> = serve para identificar que ali está o conteúdo principal.

quando a tag hover é chamada para um parametro, ela significa que 
o efeito aplicado dentro de {} só será passado executado quando 
o mouse passar por cima do elemento a qual ela foi atribuida, exemplo:
nav a:hover {
    color: #C78C19;
    text-decoration: underline;
}
dessa maneira, a tag será chamada apenas para quando o mouse passar por cima do conteúdo de a (link)
dentro da tag mãe (nav)

dessa maneira também, a tag active, faz com que o css mude de acordo como desejado, para quando 
o elemento for clicado, exemplo

.imagem:active{
    color: green;
}

quando o conteúdo de imagem for clicado, a cor do elemento mudará para verde.


em html, dentro da categoria input, temos alguns tipos de informações a serem informados, por exemplo:

type password: definirá que o que for digitado pelo usuario sera mostrado como senha
type text: definirá que o que for digitado pelo usuario sera mostrado como texto
type number:definirá que o que for digitado pelo usuario sera mostrado como numero
type submit: definirá que o que for digitado pelo usuario sera mostrado como função de enviar

A criar uma tabela HTML
A tag table, que representa a tabela
A tag tr, que representa a linha da tabela
A tag td, que representa a célula da tabela
A tag thead, que representa o cabeçalho da tabela
A tag tbody, que representa o corpo da tabela
A tag th, que representa a célula do cabeçalho da tabela
A tag tfoot, que representa o rodapé da tabela